name: Pull Request
on:
  pull_request:
    branches:
    - main

jobs:

  build:
    name: Build and Deploy
    runs-on: ubuntu-latest
    env:
      BUILD_METADATA: build.${{ github.run_number }}
      GIT_COMMIT: ${{ github.sha }}
    steps:
    - name: Check out code
      uses: actions/checkout@v3

    - name: KinD (Kubernetes in Docker) Initialization
      uses: helm/kind-action@v1.1.0
      with:
        version: v0.11.1
        wait: 0s

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version-file: go.mod
        cache: true

    - name: Set up GoReleaser
      uses: goreleaser/goreleaser-action@v2
      with:
        install-only: true

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: '${{ github.actor }}'
        password: '${{ github.token }}'

    - name: Build and push controller
      run: |
        IMG="ghcr.io/thestormforge/optimize-controller:sha-$(git rev-parse --short HEAD)"
        SETUPTOOLS_IMG="ghcr.io/thestormforge/setuptools:sha-$(git rev-parse --short HEAD)"
        PULL_POLICY=""
        
        make docker-build
        make docker-push
        
        skopeo copy "docker://${IMG}" "docker://${IMG%%:*}:pr-${{ github.event.number }}"
        skopeo copy "docker://${SETUPTOOLS_IMG}" "docker://${SETUPTOOLS_IMG%%:*}:pr-${{ github.event.number }}"
        
        echo "IMG=${IMG}" >> $GITHUB_ENV
        echo "SETUPTOOLS_IMG=${SETUPTOOLS_IMG}" >> $GITHUB_ENV
        echo "PULL_POLICY=${PULL_POLICY}" >> $GITHUB_ENV

    - name: Run integration tests
      run: |
        make cli
        hack/integration.sh
