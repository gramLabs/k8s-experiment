name: Main
on:
  push:
    branches:
    - main

jobs:

  build:
    name: Build and Deploy
    runs-on: ubuntu-latest
    env:
      BUILD_METADATA: build.${{ github.run_number }}
      GIT_COMMIT: ${{ github.sha }}
    outputs:
      IMG: ${{ steps.controller.outputs.IMG }}
      SETUPTOOLS_IMG: ${{ steps.controller.outputs.SETUPTOOLS_IMG }}
      PULL_POLICY: ${{ steps.controller.outputs.PULL_POLICY}}
    steps:
    - name: Check out code
      uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version-file: go.mod
        cache: true

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: '${{ github.actor }}'
        password: '${{ github.token }}'

    - name: Build and push controller
      id: controller
      run: |
        IMG="ghcr.io/thestormforge/optimize-controller:sha-$(git rev-parse --short HEAD)"
        SETUPTOOLS_IMG="ghcr.io/thestormforge/setuptools:sha-$(git rev-parse --short HEAD)"
        PULL_POLICY=""
        
        make -o test docker-build
        make docker-push
        
        skopeo copy "docker://${IMG}" "docker://${IMG%%:*}:edge"
        skopeo copy "docker://${SETUPTOOLS_IMG}" "docker://${SETUPTOOLS_IMG%%:*}:edge"
        
        echo "IMG=${IMG}" >> $GITHUB_OUTPUT
        echo "SETUPTOOLS_IMG=${SETUPTOOLS_IMG}" >> $GITHUB_OUTPUT
        echo "PULL_POLICY=${PULL_POLICY}" >> $GITHUB_OUTPUT

  test:
    name: Test Kubernetes Versions
    runs-on: ubuntu-latest
    needs: build
    if: ${{ !startsWith(github.ref_name, 'v') }}
    strategy:
      matrix:
        # Version listings can be found here:
        # https://github.com/kubernetes-sigs/kind/releases
        node:
        - v1.21.1
        - v1.20.7
        - v1.19.11
        - v1.18.19
        - v1.17.17
        - v1.16.15
        - v1.15.12
        - v1.14.10
    env:
      BUILD_METADATA: build.${{ github.run_number }}
      GIT_COMMIT: ${{ github.sha }}
      IMG: ${{ needs.build.outputs.IMG }}
      SETUPTOOLS_IMG: ${{ needs.build.outputs.SETUPTOOLS_IMG }}
      PULL_POLICY: ${{ needs.build.outputs.PULL_POLICY }}
    steps:
    - name: Check out code
      uses: actions/checkout@v3

    - name: KinD (Kubernetes in Docker) Initialization
      uses: helm/kind-action@v1.1.0
      with:
        version: v0.11.1
        node_image: kindest/node:${{ matrix.node }}

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version-file: go.mod
        cache: true

    - name: Set up GoReleaser
      uses: goreleaser/goreleaser-action@v2
      with:
        install-only: true

    - name: Run integration tests
      run: |
        docker pull ${IMG}
        docker pull ${SETUPTOOLS_IMG}
        make cli
        hack/integration.sh

    - name: Dump state on fail
      if: ${{ failure() }}
      run: |
        kubectl get trial,experiment,svc,pod -o wide
        kubectl get pods -o wide -l stormforge.io/experiment=postgres-example
