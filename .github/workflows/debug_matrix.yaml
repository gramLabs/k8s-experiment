name: Matrix workflow
on:
  pull_request:
    branches:
      - master

jobs:
  test:
    name: Test Kubernetes Versions
    runs-on: ubuntu-latest
    env:
      BUILD_METADATA: build.${{ github.run_number }}
      GIT_COMMIT: ${{ github.sha }}
    strategy:
      matrix:
        # Version listings can be found here:
        # https://github.com/kubernetes-sigs/kind/releases
        node:
          - v1.20.2
          - v1.19.7
          - v1.18.15
          - v1.17.17
          - v1.16.15
          - v1.15.12
          - v1.14.10
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: KinD (Kubernetes in Docker) Initialization
        uses: helm/kind-action@v1.1.0
        with:
          version: v0.10.0
          node_image: kindest/node:${{ matrix.node }}
          wait: 0s
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: ^1.16
      - name: Cache Go Modules
        uses: actions/cache@v1
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Cache Go Cache
        uses: actions/cache@v1
        with:
          path: ~/.cache
          key: ${{ runner.os }}-gobuildcache-${{ hashFiles('**.go') }}
          restore-keys: |
            ${{ runner.os }}-gobuildcache-
      - name: Bootstrap
        run: |
          DOCKER_REGISTRY="ghcr.io/thestormforge"
          DOCKER_TAG="sha-$(git rev-parse --short HEAD)"
          echo "IMAGE_TAG=pr-${{ github.event.number }}" >> $GITHUB_ENV
          echo "IMG=${DOCKER_REGISTRY}/optimize-controller:${DOCKER_TAG}" >> $GITHUB_ENV
          echo "REDSKYCTL_IMG=${DOCKER_REGISTRY}/redskyctl:${DOCKER_TAG}" >> $GITHUB_ENV
          echo "SETUPTOOLS_IMG=${DOCKER_REGISTRY}/setuptools:${DOCKER_TAG}" >> $GITHUB_ENV
          echo "PULL_POLICY=" >> $GITHUB_ENV
      - name: Build controller
        run: |
          hack/install_kustomize.sh
          make docker-build-ci
      - name: Build tool
        uses: goreleaser/goreleaser-action@v2
        with:
          args: release --skip-sign --rm-dist --snapshot
      - name: Wait 10s because sleep fixes everything
        run: |
          sleep 10
      - name: Quick Start
        run: |
          hack/integration.sh
      - name: The job has failed
        if: ${{ failure() }}
        run: |
          kubectl get trial,experiment,svc,pod -o wide
          kubectl get pods -o wide -l redskyops.dev/experiment=postgres-example
