---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    helm.sh/chart: optimize-prometheus
    app.kubernetes.io/name: optimize-prometheus
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: Helm
    app: prometheus
    {{- with .Values.commonLabels }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
  name: {{ .Release.Name }}-server
spec:
  selector:
    matchLabels:
      app: prometheus
      helm.sh/chart: optimize-prometheus
      app.kubernetes.io/name: optimize-prometheus
      app.kubernetes.io/instance: {{ .Release.Name }}
      app.kubernetes.io/managed-by: Helm
      {{- with .Values.commonLabels }}
      {{- toYaml . | nindent 6 }}
      {{- end }}
  replicas: 1
  template:
    metadata:
      labels:
        app: prometheus
        helm.sh/chart: optimize-prometheus
        app.kubernetes.io/name: optimize-prometheus
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/managed-by: Helm
        {{- with .Values.commonLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      serviceAccountName: {{ .Release.Name }}-server
      containers:
      {{- if .Values.promServer.scrapes.kubeStateMetrics }}
      - name: kube-state-metrics
        args:
        {{- if .Values.promServer.kubeconfigSecret }}
        - --kubeconfig /.kube/config
        {{- end }}
        - --collectors=pods
        imagePullPolicy: {{ .Values.kubeStateMetrics.image.pullPolicy }}
        image: "{{ .Values.kubeStateMetrics.image.repository }}:{{ .Values.kubeStateMetrics.image.tag }}"
        ports:
        - containerPort: 8080
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 5
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            path: /
            port: 8080
          initialDelaySeconds: 5
          timeoutSeconds: 5
        resources:
          {{- toYaml .Values.kubeStateMetrics.resources | nindent 10 }}
        {{- if .Values.promServer.kubeconfigSecret }}
        volumeMounts:
        - name: kubeconfig-volume
          mountPath: /.kube
          readOnly: true
        {{- end }}
      {{- end }}
      {{- if .Values.promServer.scrapes.pushGateway }}
      - name: prometheus-pushgateway
        image: "{{ .Values.pushGateway.image.repository }}:{{ .Values.pushGateway.image.tag }}"
        imagePullPolicy: {{ .Values.pushGateway.image.pullPolicy }}
        ports:
          - containerPort: 9091
        livenessProbe:
          httpGet:
            path: /-/healthy
            port: 9091
          initialDelaySeconds: 10
          timeoutSeconds: 10
        readinessProbe:
          httpGet:
            path: /-/ready
            port: 9091
          initialDelaySeconds: 10
          timeoutSeconds: 10
        resources:
          {{- toYaml .Values.pushGateway.resources | nindent 10 }}
      {{- end }}
      - name: prometheus-server
        image: "{{ .Values.promServer.image.repository }}:{{ .Values.promServer.image.tag }}"
        imagePullPolicy: {{ .Values.promServer.image.pullPolicy }}
        args:
          - --storage.tsdb.retention.time=1d
          - --config.file=/etc/config/prometheus.yml
          - --web.enable-lifecycle
        ports:
          - containerPort: 9090
        resources:
          {{- toYaml .Values.promServer.resources | nindent 10 }}
        readinessProbe:
          httpGet:
            path: /-/ready
            port: 9090
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 30
          failureThreshold: 3
          successThreshold: 1
        livenessProbe:
          httpGet:
            path: /-/healthy
            port: 9090
          initialDelaySeconds: 10
          periodSeconds: 15
          timeoutSeconds: 30
          failureThreshold: 3
          successThreshold: 1
        volumeMounts:
          - name: config-volume
            mountPath: /etc/config
          - name: storage-volume
            mountPath: /data
          {{- if .Values.promServer.kubeconfigSecret }}
          - name: kubeconfig-volume
            mountPath: /.kube
            readOnly: true
          {{- end }}
      - name: configmap-reloader
        image: "{{ .Values.configReload.image.repository }}:{{ .Values.configReload.image.tag }}"
        imagePullPolicy: {{ .Values.configReload.image.pullPolicy }}
        args:
          - --volume-dir=/etc/config
          - --webhook-url=http://127.0.0.1:9090/-/reload
        resources:
          {{- toYaml .Values.configReload.resources | nindent 10 }}
        volumeMounts:
          - name: config-volume
            mountPath: /etc/config
            readOnly: true
      securityContext:
        fsGroup: 65534
        runAsGroup: 65534
        runAsNonRoot: true
        runAsUser: 65534
      terminationGracePeriodSeconds: 300
      volumes:
        - name: config-volume
          configMap:
            name: {{ .Release.Name }}-server
        - name: storage-volume
          emptyDir:
            sizeLimit: "{{ .Values.storageVolumeSize }}"
        {{- with .Values.promServer.kubeconfigSecret }}
        - name: kubeconfig-volume
          secret:
            {{- toYaml . | nindent 12 }}
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
