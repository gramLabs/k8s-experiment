---
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    helm.sh/chart: optimize-prometheus
    app.kubernetes.io/name: optimize-prometheus
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: Helm
    app: prometheus
  name: {{ .Release.Name }}-server
data:
  prometheus.yml: |
    global:
      scrape_interval: "{{ .Values.scrapeInterval }}"
      scrape_timeout: "{{ .Values.scrapeTimeout }}"
    rule_files:
    - /etc/config/rules.yml
    scrape_configs:
    {{- if .Values.promServer.scrapes.cadvisor }}
    - job_name: kubernetes-cadvisor
      scheme: https
      metrics_path: /metrics/cadvisor
      tls_config:
        ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        insecure_skip_verify: true
      bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
      kubernetes_sd_configs:
      - role: node
      relabel_configs:
      - action: labelmap
        regex: __meta_kubernetes_node_label_(.+)
      metric_relabel_configs:
      # We only consume the following metrics, so let's drop everything else
      - regex: ^container_cpu_usage_seconds_total|container_memory_max_usage_bytes$
        source_labels: [ __name__ ]
        action: keep
    {{- end }}
    {{- if .Values.promServer.scrapes.kubeStateMetrics }}
    - job_name: kube-state-metrics
      scheme: http
      static_configs:
      - targets:
        - localhost:8080
      metric_relabel_configs:
      # We only consume the following metrics, so let's drop everything else
      - regex: ^kube_pod_container_resource_requests_cpu_cores|kube_pod_labels|kube_pod_container_resource_requests_memory_bytes$
        source_labels: [ __name__ ]
        action: keep
      # Drop labels we dont care about
      - regex: ^beta_kubernetes_io_arch$
        action: labeldrop
      - regex: ^kubernetes_io_arch$
        action: labeldrop
      - regex: ^beta_kubernetes_io_os$
        action: labeldrop
      - regex: ^kubernetes_io_os$
        action: labeldrop
      - regex: ^job$
        action: labeldrop
      - regex: ^instance$
        action: labeldrop
      - regex: ^node$
        action: labeldrop
    {{- end }}
    {{- if .Values.promServer.scrapes.pushGateway }}
    - job_name: prometheus-pushgateway
      honor_labels: true
      scheme: http
      static_configs:
      - targets:
        - localhost:9091
    {{- end }}
    {{- with .Values.promServer.extraScrapeConfigs }}
    {{- tpl . $ | nindent 4 }}
    {{- end }}
  rules.yml: |
    groups: {{ with .Values.promServer.extraRuleGroups }}
    {{- tpl . $ | nindent 4 }}
    {{- else }}[]{{ end }}
